<%- include('partials/header', { title: 'Your Workout', user: user }) %>

<div class="bg-slate-50 min-h-screen px-4 py-8 sm:px-6 lg:px-8">
    <div class="max-w-4xl mx-auto">

        <!-- ============================== -->
        <!-- INITIAL STATE / ERROR STATE -->
        <!-- ============================== -->
        <% if (!workoutPlan && !error) { %>
            <div class="text-center py-20" data-aos="zoom-in">
                 <h1 class="text-4xl font-extrabold text-gray-800">Stand By for Your Mission...</h1>
                 <p class="text-gray-500 mt-4">Your AI Coach is crafting the perfect challenge for you. Get ready!</p>
            </div>
        <% } %>
        <% if (error) { %>
            <div class="bg-white p-8 rounded-2xl shadow-xl text-center" data-aos="fade-up">
                 <div class="mx-auto w-20 h-20 flex items-center justify-center bg-red-100 rounded-full">
                     <i class="fas fa-ghost text-4xl text-red-500 fa-fade"></i>
                 </div>
                 <h2 class="mt-4 text-2xl font-bold text-gray-800">Mission Aborted!</h2>
                 <p class="mt-2 text-gray-600"><%= error %></p>
                 <a href="/workout-plan" class="mt-6 inline-block bg-blue-600 text-white font-semibold py-2 px-5 rounded-lg hover:bg-blue-700 transition-all">Request New Orders</a>
            </div>
        <% } %>

        <!-- ============================== -->
        <!-- WORKOUT PLAN DISPLAY -->
        <!-- ============================== -->
        <% if (workoutPlan && workoutPlan.length) { %>
            
            <!-- Mission Briefing from AI -->
            <% if (userSummary) { %>
                <div class="relative bg-gradient-to-br from-gray-800 to-gray-900 text-white p-8 rounded-2xl shadow-2xl shadow-gray-400 mb-12" data-aos="fade-down">
                    <i class="fas fa-crosshairs absolute top-4 right-6 text-4xl text-white/10"></i>
                    <h1 class="text-center text-2xl md:text-3xl font-bold leading-tight"><%= userSummary %></h1>
                </div>
            <% } %>

            <!-- Funny Roast Quotes Block (Start) -->
            <div class="max-w-xl mx-auto my-8 p-6 rounded-2xl text-center bg-gradient-to-r from-pink-100 via-yellow-100 to-green-100 shadow-md">
              <p class="text-lg font-semibold text-gray-700 mb-0">"I eat cake because it's somebody's birthday somewhere. üéÇüéâ"</p>
            </div>

            <!-- The Exercise "Mission Log" -->
            <div class="space-y-8">
                <% workoutPlan.forEach((exercise, index) => { %>
                    <div class="bg-white p-6 sm:p-8 rounded-2xl shadow-lg border border-gray-100 hover:shadow-2xl hover:border-blue-400 transition-all duration-300" 
                         data-aos="fade-up" data-aos-delay="<%= index * 100 %>">

                        <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 items-start">
                            <!-- Left Side: All The Details -->
                            <div>
                                <span class="font-bold text-blue-600">EXERCISE <%= (index + 1) %> / 5</span>
                                <h2 class="text-3xl font-extrabold text-gray-800 mt-1"><%= exercise.name %></h2>
                                <blockquote class="mt-4 text-gray-500 border-l-4 border-slate-200 pl-4 italic">"<%= exercise.description %>"</blockquote>
                                <div class="mt-6"><span class="inline-block bg-blue-100 text-blue-800 font-bold py-2 px-4 rounded-full"><i class="fas fa-dumbbell mr-2"></i><%= exercise.setsAndReps %></span></div>
                                <div class="mt-6"><h3 class="font-semibold text-gray-700 mb-2">The Blueprint:</h3><ol class="list-decimal list-inside space-y-2 text-gray-600"><% exercise.instructions.forEach(step => { %><li><%= step %></li><% }); %></ol></div>
                            </div>
                            
                            <!-- Right Side: Video & Benefits -->
                            <div class="space-y-6">
                                <div class="video-container relative group cursor-pointer" data-youtube-url="<%= exercise.youtubeLink || '' %>" id="video-container-<%= index %>">
                                    <!-- The JS will handle populating this -->
                                    <div class="thumbnail-placeholder aspect-video w-full bg-slate-200 flex items-center justify-center rounded-xl">
                                        <i class="fas fa-spinner fa-spin text-3xl text-slate-400"></i>
                                    </div>
                                </div>
                                <!-- Level-Up Perks -->
                                <div>
                                     <h3 class="font-semibold text-gray-700 mb-2">Level-Up Perks:</h3>
                                     <ul class="space-y-2 text-sm"><% exercise.benefits.forEach(perk => { %><li class="flex gap-2 items-start"><i class="fas fa-star text-amber-400 mt-1"></i><span class="text-gray-600"><%= perk %></span></li><% }); %></ul>
                                </div>
                            </div>
                        </div>
                    </div>
                <% }); %>
            </div>
            
            <!-- Buttons at the end -->
             <div class="mt-16 text-center space-y-4">
                 <a href="/progress" class="inline-flex items-center justify-center px-10 py-4 text-lg font-bold rounded-full text-white bg-gradient-to-r from-green-500 to-teal-500 transform hover:scale-105 hover:shadow-2xl hover:shadow-green-300 transition-all duration-300"><i class="fas fa-check-double mr-3"></i> Mission Complete! Log It.</a>
                 <form action="/workout-plan" method="GET" class="inline-block"><button type="submit" class="font-semibold text-gray-500 hover:text-gray-800 transition"><i class="fas fa-sync-alt mr-2"></i> Request new orders</button></form>
             </div>

            <!-- Funny Roast Quotes Block (End) -->
            <div class="max-w-xl mx-auto my-8 p-6 rounded-2xl text-center bg-gradient-to-r from-green-100 via-blue-100 to-pink-100 shadow-md">
              <p class="text-lg font-semibold text-gray-700 mb-0">"My six-pack is protected by a layer of cake. üç∞üõ°Ô∏è"</p>
            </div>
        <% } %>
    </div>
</div>

<script>
    //==============================================
    //      FINAL, WORKING SCRIPT - CLIENT SIDE
    //==============================================
    document.addEventListener('DOMContentLoaded', () => {
        /**
         * This is our "Universal YouTube ID Parser". It runs in the user's browser.
         * It can extract the ID from any common YouTube URL format.
         */
        function getYouTubeId(url) {
            if (!url) return null;
            // This regex handles watch?v=, /embed/, youtu.be/, and other formats.
            const regExp = /^.*(youtu.be\/|v\/|u\/\w\/|embed\/|watch\?v=|\&v=)([^#\&\?]*).*/;
            const match = url.match(regExp);
            return (match && match[2].length === 11) ? match[2] : null;
        }

        // Find all video container placeholders on the page
        const videoContainers = document.querySelectorAll('.video-container');
        
        videoContainers.forEach(async container => {
            const youtubeUrl = container.dataset.youtubeUrl;
            let videoId = getYouTubeId(youtubeUrl);
            // If no valid videoId, try to fetch from backend using exercise name
            if (!videoId) {
                // Find the exercise name from the DOM (assumes structure is unchanged)
                const parent = container.closest('.grid');
                let exerciseName = '';
                if (parent) {
                    const h2 = parent.querySelector('h2');
                    if (h2) exerciseName = h2.textContent.trim();
                }
                if (exerciseName) {
                    try {
                        const res = await fetch(`/api/youtube-search?q=${encodeURIComponent(exerciseName)}`);
                        if (res.ok) {
                            const data = await res.json();
                            videoId = data.videoId;
                        }
                    } catch (e) {
                        // ignore
                    }
                }
            }
            if (videoId) {
                // If we found a valid ID, create the thumbnail and play button
                const thumbnailHtml = `
                    <img src="https://img.youtube.com/vi/${videoId}/hqdefault.jpg" class="rounded-xl w-full shadow-lg transition-transform group-hover:scale-105" alt="Video thumbnail">
                    <div class="absolute inset-0 bg-black/30 flex items-center justify-center rounded-xl opacity-0 group-hover:opacity-100 transition-opacity">
                        <i class="fas fa-play text-white text-5xl"></i>
                    </div>
                `;
                container.innerHTML = thumbnailHtml;

                // Add the click listener to THIS specific container
                container.addEventListener('click', () => {
                    // Create the iframe element when clicked
                    const iframe = document.createElement('iframe');
                    iframe.setAttribute('src', `https://www.youtube.com/embed/${videoId}?autoplay=1&rel=0`);
                    iframe.setAttribute('title', 'YouTube video player');
                    iframe.setAttribute('frameborder', '0');
                    iframe.setAttribute('allow', 'accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share');
                    iframe.setAttribute('allowfullscreen', '');
                    iframe.setAttribute('class', 'absolute top-0 left-0 w-full h-full rounded-xl');

                    // Replace the container's content with the iframe
                    container.innerHTML = '';
                    container.style.paddingTop = '56.25%'; // Set 16:9 aspect ratio for video
                    container.classList.remove('group', 'cursor-pointer');
                    container.appendChild(iframe);
                }, { once: true }); // Listener runs only once

            } else {
                // If we couldn't get an ID, show the "Not Available" message
                container.innerHTML = `
                    <div class="aspect-video w-full bg-slate-200 flex items-center justify-center rounded-xl">
                        <p class="text-slate-500">Video Not Available</p>
                    </div>
                `;
            }
        });
    });
</script>

<%- include('partials/footer') %>